{% import "github.com/sparkymat/fundock/presenter" %}

{% func FunctionShow(csrfToken string, fn presenter.Function, invocations []presenter.Invocation) %}
  <div class="uk-padding uk-flex uk-flex-column">
    <h1>{%s fn.Name %}</h1>
    <p class="uk-margin-small">
      <span uk-icon="info"></span>
      {%s fn.Image %}
    </p>
    {% if fn.SkipLogging %}
      <p>Input and output is not logged</p>
    {% else %}
      <p>Input and output is logged</p>
    {% endif %}
    <div>
      <button class="uk-button uk-button-default">Disable</button>
    </div>
    <div class="uk-margin-top uk-width-1-1 uk-width-1-2@m">
      <form action="/exec/{%s fn.Name %}" method="POST">
        <input type="hidden" name="csrf" value="{%s csrfToken %}">
        <json-editor class="uk-width-1-1" value="{}">
        </json-editor>
        <input type="submit" class="uk-button uk-button-primary uk-margin-small-top" value="Run">
      </form>
    </div>
    <h3>Invocations</h3>
    <table class="uk-table uk-table-striped">
      <thead>
        <th>ID</th>
        <th>Status</th>
        <th>Timestamp</th>
        <th>Duration</th>
      </thead>
      <tbody>
        {% for _, in := range invocations %}
          <tr>
            <td>{%s in.ID %}</td>
            <td>{%s in.Status %}</td>
            <td>{%s in.Timestamp %}</td>
            <td>{%s in.Duration %}</td>
          </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
{% endfunc %}
