// Code generated by qtc from "invocation_show.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line view/invocation_show.qtpl:1
package view

//line view/invocation_show.qtpl:1
import "github.com/sparkymat/fundock/presenter"

//line view/invocation_show.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line view/invocation_show.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line view/invocation_show.qtpl:3
func StreamInvocationShow(qw422016 *qt422016.Writer, inv presenter.Invocation, fn *presenter.Function) {
//line view/invocation_show.qtpl:3
	qw422016.N().S(`
  <div class="uk-padding uk-flex uk-flex-column">
    <h3>`)
//line view/invocation_show.qtpl:5
	qw422016.E().S(inv.ID)
//line view/invocation_show.qtpl:5
	qw422016.N().S(`</h3>
    `)
//line view/invocation_show.qtpl:6
	if fn != nil {
//line view/invocation_show.qtpl:6
		qw422016.N().S(`
      <a href="/fn/`)
//line view/invocation_show.qtpl:7
		qw422016.E().S(fn.Name)
//line view/invocation_show.qtpl:7
		qw422016.N().S(`">
    `)
//line view/invocation_show.qtpl:8
	}
//line view/invocation_show.qtpl:8
	qw422016.N().S(`
    <p class="uk-margin-small">
      <span uk-icon="info"></span>
      `)
//line view/invocation_show.qtpl:11
	qw422016.E().S(inv.FunctionName)
//line view/invocation_show.qtpl:11
	qw422016.N().S(`
    </p>
    `)
//line view/invocation_show.qtpl:13
	if fn != nil {
//line view/invocation_show.qtpl:13
		qw422016.N().S(`
      </a>
    `)
//line view/invocation_show.qtpl:15
	}
//line view/invocation_show.qtpl:15
	qw422016.N().S(`
    <h3>Input</h3>
    `)
//line view/invocation_show.qtpl:17
	if inv.Input != nil {
//line view/invocation_show.qtpl:17
		qw422016.N().S(`
      <pre>`)
//line view/invocation_show.qtpl:18
		qw422016.E().S(*inv.Input)
//line view/invocation_show.qtpl:18
		qw422016.N().S(`</pre>
    `)
//line view/invocation_show.qtpl:19
	} else {
//line view/invocation_show.qtpl:19
		qw422016.N().S(`
      <p>No input</p>
    `)
//line view/invocation_show.qtpl:21
	}
//line view/invocation_show.qtpl:21
	qw422016.N().S(`
    <h3>Output</h3>
    `)
//line view/invocation_show.qtpl:23
	if inv.Output != nil {
//line view/invocation_show.qtpl:23
		qw422016.N().S(`
      <pre>`)
//line view/invocation_show.qtpl:24
		qw422016.E().S(*inv.Output)
//line view/invocation_show.qtpl:24
		qw422016.N().S(`</pre>
    `)
//line view/invocation_show.qtpl:25
	} else {
//line view/invocation_show.qtpl:25
		qw422016.N().S(`
      <p>No output</p>
    `)
//line view/invocation_show.qtpl:27
	}
//line view/invocation_show.qtpl:27
	qw422016.N().S(`
  </div>
`)
//line view/invocation_show.qtpl:29
}

//line view/invocation_show.qtpl:29
func WriteInvocationShow(qq422016 qtio422016.Writer, inv presenter.Invocation, fn *presenter.Function) {
//line view/invocation_show.qtpl:29
	qw422016 := qt422016.AcquireWriter(qq422016)
//line view/invocation_show.qtpl:29
	StreamInvocationShow(qw422016, inv, fn)
//line view/invocation_show.qtpl:29
	qt422016.ReleaseWriter(qw422016)
//line view/invocation_show.qtpl:29
}

//line view/invocation_show.qtpl:29
func InvocationShow(inv presenter.Invocation, fn *presenter.Function) string {
//line view/invocation_show.qtpl:29
	qb422016 := qt422016.AcquireByteBuffer()
//line view/invocation_show.qtpl:29
	WriteInvocationShow(qb422016, inv, fn)
//line view/invocation_show.qtpl:29
	qs422016 := string(qb422016.B)
//line view/invocation_show.qtpl:29
	qt422016.ReleaseByteBuffer(qb422016)
//line view/invocation_show.qtpl:29
	return qs422016
//line view/invocation_show.qtpl:29
}
