// Code generated by qtc from "function_show.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line view/function_show.qtpl:1
package view

//line view/function_show.qtpl:1
import "github.com/sparkymat/fundock/presenter"

//line view/function_show.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line view/function_show.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line view/function_show.qtpl:3
func StreamFunctionShow(qw422016 *qt422016.Writer, csrfToken string, fn presenter.Function, invocations []presenter.Invocation) {
//line view/function_show.qtpl:3
	qw422016.N().S(`
  <div class="uk-padding uk-flex uk-flex-column">
    <h1>`)
//line view/function_show.qtpl:5
	qw422016.E().S(fn.Name)
//line view/function_show.qtpl:5
	qw422016.N().S(`</h1>
    <p class="uk-margin-small">
      <span uk-icon="info"></span>
      `)
//line view/function_show.qtpl:8
	qw422016.E().S(fn.Image)
//line view/function_show.qtpl:8
	qw422016.N().S(`
    </p>
    `)
//line view/function_show.qtpl:10
	if fn.SkipLogging {
//line view/function_show.qtpl:10
		qw422016.N().S(`
      <p>Input and output is not logged</p>
    `)
//line view/function_show.qtpl:12
	} else {
//line view/function_show.qtpl:12
		qw422016.N().S(`
      <p>Input and output is logged</p>
    `)
//line view/function_show.qtpl:14
	}
//line view/function_show.qtpl:14
	qw422016.N().S(`
    <div>
      <button class="uk-button uk-button-default">Disable</button>
    </div>
    <div class="uk-margin-top uk-width-1-1 uk-width-1-2@m">
      <form action="/exec/`)
//line view/function_show.qtpl:19
	qw422016.E().S(fn.Name)
//line view/function_show.qtpl:19
	qw422016.N().S(`" method="POST">
        <input type="hidden" name="csrf" value="`)
//line view/function_show.qtpl:20
	qw422016.E().S(csrfToken)
//line view/function_show.qtpl:20
	qw422016.N().S(`">
        <textarea class="uk-width-1-1 uk-textarea" rows="8" name="input">{}</textarea>
        <input type="submit" class="uk-button uk-button-primary uk-margin-small-top" value="Run">
      </form>
    </div>
    <h3>Invocations</h3>
    <table class="uk-table uk-table-striped">
      <thead>
        <th>ID</th>
        <th>Status</th>
        <th>Timestamp</th>
        <th>Duration</th>
      </thead>
      <tbody>
        `)
//line view/function_show.qtpl:34
	for _, in := range invocations {
//line view/function_show.qtpl:34
		qw422016.N().S(`
          <tr>
            <td><a href="/invocations/`)
//line view/function_show.qtpl:36
		qw422016.E().S(in.ID)
//line view/function_show.qtpl:36
		qw422016.N().S(`">`)
//line view/function_show.qtpl:36
		qw422016.E().S(in.ID)
//line view/function_show.qtpl:36
		qw422016.N().S(`</a></td>
            <td>`)
//line view/function_show.qtpl:37
		qw422016.E().S(in.Status)
//line view/function_show.qtpl:37
		qw422016.N().S(`</td>
            <td>`)
//line view/function_show.qtpl:38
		qw422016.E().S(in.Timestamp)
//line view/function_show.qtpl:38
		qw422016.N().S(`</td>
            <td>`)
//line view/function_show.qtpl:39
		qw422016.E().S(in.Duration)
//line view/function_show.qtpl:39
		qw422016.N().S(`</td>
          </tr>
        `)
//line view/function_show.qtpl:41
	}
//line view/function_show.qtpl:41
	qw422016.N().S(`
      </tbody>
    </table>
  </div>
`)
//line view/function_show.qtpl:45
}

//line view/function_show.qtpl:45
func WriteFunctionShow(qq422016 qtio422016.Writer, csrfToken string, fn presenter.Function, invocations []presenter.Invocation) {
//line view/function_show.qtpl:45
	qw422016 := qt422016.AcquireWriter(qq422016)
//line view/function_show.qtpl:45
	StreamFunctionShow(qw422016, csrfToken, fn, invocations)
//line view/function_show.qtpl:45
	qt422016.ReleaseWriter(qw422016)
//line view/function_show.qtpl:45
}

//line view/function_show.qtpl:45
func FunctionShow(csrfToken string, fn presenter.Function, invocations []presenter.Invocation) string {
//line view/function_show.qtpl:45
	qb422016 := qt422016.AcquireByteBuffer()
//line view/function_show.qtpl:45
	WriteFunctionShow(qb422016, csrfToken, fn, invocations)
//line view/function_show.qtpl:45
	qs422016 := string(qb422016.B)
//line view/function_show.qtpl:45
	qt422016.ReleaseByteBuffer(qb422016)
//line view/function_show.qtpl:45
	return qs422016
//line view/function_show.qtpl:45
}
