// Code generated by qtc from "api_tokens.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line view/api_tokens.qtpl:1
package view

//line view/api_tokens.qtpl:1
import "github.com/sparkymat/fundock/presenter"

//line view/api_tokens.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line view/api_tokens.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line view/api_tokens.qtpl:3
func StreamAPITokens(qw422016 *qt422016.Writer, apiTokens []presenter.APIToken) {
//line view/api_tokens.qtpl:3
	qw422016.N().S(`
  <div class="uk-padding">
    <a href="/api_tokens/new" class="uk-button uk-button-primary uk-float-right">New API Token</a>
    <table class="uk-table uk-table-striped">
      <thead>
        <tr>
          <th>Client Name</th>
          <th>Token</th>
          <th>Last used</th>
        </tr>
      </thead>
      <tbody>
        `)
//line view/api_tokens.qtpl:15
	for _, apiToken := range apiTokens {
//line view/api_tokens.qtpl:15
		qw422016.N().S(`
          <tr>
            <td>`)
//line view/api_tokens.qtpl:17
		qw422016.E().S(apiToken.ClientName)
//line view/api_tokens.qtpl:17
		qw422016.N().S(`</td>
            <td>`)
//line view/api_tokens.qtpl:18
		qw422016.E().S(apiToken.Token)
//line view/api_tokens.qtpl:18
		qw422016.N().S(`</td>
            `)
//line view/api_tokens.qtpl:19
		if apiToken.LastUsed == nil {
//line view/api_tokens.qtpl:19
			qw422016.N().S(`
              <td><i>Never</i></td>
            `)
//line view/api_tokens.qtpl:21
		} else {
//line view/api_tokens.qtpl:21
			qw422016.N().S(`
              <td>`)
//line view/api_tokens.qtpl:22
			qw422016.E().S(*apiToken.LastUsed)
//line view/api_tokens.qtpl:22
			qw422016.N().S(`</td>
            `)
//line view/api_tokens.qtpl:23
		}
//line view/api_tokens.qtpl:23
		qw422016.N().S(`
          </tr>
        `)
//line view/api_tokens.qtpl:25
	}
//line view/api_tokens.qtpl:25
	qw422016.N().S(`
      </tbody>
    </table>
  </div>
`)
//line view/api_tokens.qtpl:29
}

//line view/api_tokens.qtpl:29
func WriteAPITokens(qq422016 qtio422016.Writer, apiTokens []presenter.APIToken) {
//line view/api_tokens.qtpl:29
	qw422016 := qt422016.AcquireWriter(qq422016)
//line view/api_tokens.qtpl:29
	StreamAPITokens(qw422016, apiTokens)
//line view/api_tokens.qtpl:29
	qt422016.ReleaseWriter(qw422016)
//line view/api_tokens.qtpl:29
}

//line view/api_tokens.qtpl:29
func APITokens(apiTokens []presenter.APIToken) string {
//line view/api_tokens.qtpl:29
	qb422016 := qt422016.AcquireByteBuffer()
//line view/api_tokens.qtpl:29
	WriteAPITokens(qb422016, apiTokens)
//line view/api_tokens.qtpl:29
	qs422016 := string(qb422016.B)
//line view/api_tokens.qtpl:29
	qt422016.ReleaseByteBuffer(qb422016)
//line view/api_tokens.qtpl:29
	return qs422016
//line view/api_tokens.qtpl:29
}
